namespace ClashEngine.NET.Resources
{
	using OpenTK.Graphics.OpenGL;

	/// <summary>
	/// Domyślna tekstura.
	/// Kwadrat 16px na 16px wypełniony kolorem #00FF00.
	/// </summary>
	internal class DefaultTexture
		: Texture
	{
		private static NLog.Logger Logger = NLog.LogManager.GetLogger("ClashEngine.NET");

		#region Texture data
		static readonly uint[] TextureData = new uint[]
		{
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
			0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F, 0xFFFF007F,
		};
		#endregion

		#region Resource members
		/// <summary>
		/// Ładuje teksturę.
		/// Zawsze zwraca powodzenie.
		/// </summary>
		/// <returns>Stan załadowania zasobu.</returns>
		public override Interfaces.ResourcesManager.ResourceLoadingState Load()
		{
			Logger.Trace("Creating default texture...");
			this.TextureId = GL.GenTexture();
			this.Widgth = this.Heigth = 16;
			this.Bind();
			GL.TexImage2D<uint>(TextureTarget.Texture2D, 0, PixelInternalFormat.Rgba, 16, 16, 0, PixelFormat.Bgra, PixelType.UnsignedByte, TextureData);
			GL.TexParameter(TextureTarget.Texture2D, TextureParameterName.TextureMinFilter, (int)TextureMinFilter.Linear);
			GL.TexParameter(TextureTarget.Texture2D, TextureParameterName.TextureMagFilter, (int)TextureMagFilter.Linear);

			Logger.Info("Default texture created with ID: {0}", this.TextureId);

			return Interfaces.ResourcesManager.ResourceLoadingState.Success;
		}
		#endregion
	}
}
